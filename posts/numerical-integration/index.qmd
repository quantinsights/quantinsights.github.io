---
title: "Numerical Integration"
author: "Quasar"
date: "2024-11-11"
categories: [Numerical Methods]      
image: "image.jpg"
toc: true
toc-depth: 3
format:
    html:
        code-tools: true
        code-block-border-left: true
        code-annotations: below
        highlight-style: pygments
---

## Interpolatory Quadrature Rules

### Introduction

We are interested in an approximate calculation of the definite integral

$$
\begin{align*}
I[f] = \int_{a}^{b}f(x)dx 
\end{align*}
$$ {#eq-definite-integral}

where $f(x)$ is a given function and $[a,b]$ is a finite interval. This problem is often called **numerical quadrature**, since it relates to the ancient problem of the quadrature of a circle i.e. constructing a square with equal area to that of a circle. The computation of the above quantity is equivalent to solving the IVP:

$$
\begin{align*}
y'(x) = f(x), \quad y(a)=0, \quad x \in[a,b]
\end{align*}
$$ {#eq-IVP}

for $y(b)=I[f]$.

As is well known, even many relatively simple integrals cannot be expressed in finite terms of elementary functions, and thus must be evaluated by numerical methods. Even when a closed form analytical solution exists, it may be preferable to use a numerical quadrature formula.

Since $I[f]$ is a linear functional, numerical integration is a special case of the problem of approximating a linear functional. The quadrature rules considered will be of the form 

$$
\begin{align*}
I[f] \approx \sum_{i=1}^n w_if(x_i)
\end{align*}
$$ {#eq-quadrature-rules}

where $x_1 < x_2 < \ldots < x_n$ are distinct **nodes** and $w_1$, $w_2$, $\ldots$, $w_n$ the **corresponding weights**. Often (but not always) all nodes lie in $[a,b]$.

The weights $w_i$ are usually determined so that the formula is exact for polynomial 