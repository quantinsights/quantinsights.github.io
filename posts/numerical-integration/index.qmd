---
title: "Numerical Integration"
author: "Quasar"
date: "2024-11-11"
categories: [Numerical Methods]      
image: "image.jpg"
toc: true
toc-depth: 3
format:
    html:
        code-tools: true
        code-block-border-left: true
        code-annotations: below
        highlight-style: pygments
---

## Interpolatory Quadrature Rules

### Introduction

We are interested in an approximate calculation of the definite integral

$$
\begin{align*}
I[f] = \int_{a}^{b}f(x)dx 
\end{align*}
$$ {#eq-definite-integral}

where $f(x)$ is a given function and $[a,b]$ is a finite interval. This problem is often called **numerical quadrature**, since it relates to the ancient problem of the quadrature of a circle i.e. constructing a square with equal area to that of a circle. The computation of the above quantity is equivalent to solving the IVP:

$$
\begin{align*}
y'(x) = f(x), \quad y(a)=0, \quad x \in[a,b]
\end{align*}
$$ {#eq-IVP}

for $y(b)=I[f]$.

As is well known, even many relatively simple integrals cannot be expressed in finite terms of elementary functions, and thus must be evaluated by numerical methods. Even when a closed form analytical solution exists, it may be preferable to use a numerical quadrature formula.

Since $I[f]$ is a linear functional, numerical integration is a special case of the problem of approximating a linear functional. The quadrature rules considered will be of the form 

$$
\begin{align*}
I[f] \approx \sum_{i=1}^n w_if(x_i)
\end{align*}
$$ {#eq-quadrature-rules}

where $x_1 < x_2 < \ldots < x_n$ are distinct **nodes** and $w_1$, $w_2$, $\ldots$, $w_n$ the **corresponding weights**. Often (but not always) all nodes lie in $[a,b]$.

The weights $w_i$ are usually determined so that @eq-quadrature-rules is exact for polynomials of as high degree as possible. The accuracy therefore depends on how well the integrand $f(x)$ can be approximated by a polynomial in $[a,b]$. If the integrand has a singularity, for example, it becomes infinite at some point in or near the interval of integration, some modification is necessary. Another complication arises, when the interval of integration is infinite. In both cases, it may be advantageous to consider a weighted quadrature rule:

$$
\begin{align*}
\int_{a}^b w(x) f(x) dx \approx \sum_{i=1}^n w_i f(x_i)
\end{align*}
$$ {#eq-weighted-quadrature}

Here, $w(x)$ is a **weight function** or a density function that incorporates the singularity so that $f(x)$ can be well approximated by a polynomial. The limits $(a,b)$ of integration are now allowed to be infinite. 

To ensure that the integral in @eq-weighted-quadrature is well-defined when $f(x)$ is a polynomial, we assume that in the following integrals 

$$
\begin{align*}
\mu_k = \int_{a}^b x^k w(x) dx, \quad k=1,2,\ldots
\end{align*}
$$ {#eq-kth-moment}

are well-defined for all $k\geq 0$ and $\mu_0 > 0$. The quantity $\mu_k$ is called the $k$th moment with respect to the weight function $w(x)$. Note that for the formula @eq-weighted-quadrature to be valid for $f(x)=x^0 = 1$, it must hold that 

$$
\begin{align*}
\mu_0 = \int_{a}^{b} 1\cdot w(x) dx \approx \sum_{i=1}^n w_i
\end{align*}
$$ {#eq-sum-of-weights}

In the special case that $w(x)=1$, we have $\mu_0 = b - a$.

::: {#def-quadrature-rule-of-order-of-accuracy-d}

### Order of accuracy of a Quadrature Rule

A quadrature rule (@eq-quadrature-rules) has **order of accuracy** (or degree of exactness) equal to $d$, iff it is exact for all polynomials of degree $\leq d$, that is, for all $p\in\mathcal{P}_{d+1}$.

:::

In a weighted **interpolatory** quadrature formula, the integral is approximated by

$$
\begin{align*}
\int_{a}^{b} p(x)w(x) dx
\end{align*}
$$ {#eq-weighted-interpolatory-quadrature-formula}

where $p(x)$ is the unique polynomial of degree $n-1$ interpolating $f(x)$ at distinct points $x_1,x_2,\ldots,x_n$. By the Lagrange's interpolation formula:

$$
\begin{align*}
p(x) = \sum_{i=1}^{n} f(x_i)l_i(x),\quad l_i(x)=\prod_{j=1,j\neq i}^n \frac{(x-x_j)}{(x_i - x_j)}
\end{align*}
$$ {#eq-lagranges-interpolation}

where $l_i(x)$ are elementary Lagrange polynomials associated with the nodes $x_1,\ldots,x_n$. 

### Some Classical Formulas

Interpolatory quadrature formulas, where the nodes are constrained to be equally spaced, are called **Newton-Cotes** formulas. These are especially suited for integrating a tabulated function, a task that was more common before the computer age. The midpoint, the trapezoidal and the Simpson's rules, to be described here, are all special cases of (unweighted) Newton-Cotes formulas.

The **trapezoidal** is based on the linear interpolation of $f(x)$ at $x_1 = a$ and $x_2 = b$, that is, $f(x)$ is approximated by :

$$
\begin{align*}
p(x) = f(a) + (x-a)[a,b]f = f(a) + (x - a)\frac{f(b) - f(a)}{b - a}
\end{align*}
$$ 

The integral of $p(x)$ equals the area of a trapezoid with base $(b-a)$ times the average height $\frac{1}{2}(f(a) + f(b))$. Hence, 

$$
\int_{a}^{b} f(x)dx \approx \frac{(b-a)}{2}(f(a) + f(b))
$$

To increase the accuracy, we subdivide the interval $[a,b]$ and assume that $f_i = f(x_i)$ is known on a grid of equidistant points:

$$
\begin{align*}
x_0 = a, \quad x_i = x_0 + ih, \quad x_n = b
\end{align*}
$$ {#eq-grid-points}

where $h = (b - a)/n$ is the **step length**. The trapezoidal approximation for the $i$th subinterval is:

$$
\begin{align*}
\int_{x_i}^{x_{i+1}} f(x)dx = T(h) + R_i, \quad T(h) = \frac{h}{2}(f_i + f_{i+1})
\end{align*}
$$ {#eq-trapezoidal-approx-in-ith-subinterval}

Assuming that $f''(x)$ is continuous in $[a,b]$ and using the exact remainder in Newton's interpolation formula, we get:

$$
\begin{align*}
R_i = \int_{x_i}^{x_{i+1}} (f(x) - p_2(x))dx = \int_{x_i}^{x_{i+1}}(x - x_i)(x - x_{i+1})[x_i,x_{i+1},x]f dx
\end{align*}
$$ {#eq-remainder-term}

Since $[x_i,x_{i+1},x]f$ is a continuous function of $x$ and $(x-x_i)(x-x_{i+1})$ has a constant (negative) sign for $x\in[x_i,x_{i+1}]$, the mean value theorem of integral calculus gives:


